@model PersonalProject.Models.UnsignedApplicationViewModel
@using (Html.BeginForm("PartialJobAppUnSigned", "JobApplications", FormMethod.Post, new { @enctype = "multipart/form-data", id = "applicationForm", onsubmit = "return submitApplicationForm();" }))
{
    @Html.AntiForgeryToken()


    <div class="w-100">
        <hr />
        <h4 class=" m-3 ">Application Details</h4>

        <div class="form-horizontal  m-3 block flex justify-content-center ">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group w-100">

                @Html.LabelFor(model => model.CV, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.CV, new { type = "file", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CV, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group w-100">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="w-100">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LinkedIn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="w-100">
                    @Html.EditorFor(model => model.LinkedIn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LinkedIn, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.JobAdvertismentId)
            <div class="form-group mt-3">
                <div class="">
                    <input type="submit" value="Apply" class="btn btn-default btn-block btn-lg w-100" style="background-color: #013479;color:white" />
                </div>
            </div>
        </div>
    </div>
}
<script>
    function submitApplicationForm() {
        const form = $('#applicationForm');
        const formData = new FormData(form[0]);
        const jobId = form.find('input[name="JobAdvertismentId"]').val(); // Retrieve JobAdvertismentId

        $.ajax({
            url: form.attr('action'),
            type: form.attr('method'),
            data: formData,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data.success) {
                    alert('Application submitted successfully!');
                    loadPartial(jobId, $('.clicked')); // Reload job details for the given jobId
//                    $('#formDetails').html(''); // Clear form details on success
                } else {
                    $('#formDetails').html(data.html);
                }
            },
            error: function () {
                alert('An error occurred. Please try again.');
            }
        });

        return false; // Prevent default form submission
    }</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
